/**
 *  Class IconImage
 *
 *  Coded & copyright Mr. Tines <tines@windsong.demon.co.uk> 1998
 *  All rights reserved.
 *
 *  This application is free software; the icons are derived
 *  by taking the .gif images from the emergin Java Freeware
 *  standard from  Icons  Copyright(C) 1998  by  Dean S. Jones 
 *  <dean@gallant.com> www.gallant.com/icons.htm, and replacing
 *  the encoding by local GZIP'd bytestreams, and are thus
 *  derivative of that source for copyright purposes, with the
 *  exception of the 'tines' logo, which is drawn by Angela
 *  Taylor based on a sketch by Vernor Vinge.
 *
 */

package com.ravnaandtines.util;

import java.awt.*;
import java.awt.image.*;
import java.io.*;
import java.util.zip.*;
import java.util.*;

class Iconette implements ImageProducer {
    int[] data;

    Hashtable ix = new Hashtable(5);
    ColorModel cm;
    int width, height;

    public Iconette(int [] dataI, int widthI, int heightI)
    {
        data = dataI;
        cm = ColorModel.getRGBdefault();
        width = widthI;
        height = heightI;
    }

    public void addConsumer(ImageConsumer  ic)
    {
        ix.put(ic, ic);
    }


    public boolean isConsumer(ImageConsumer  ic)
    {
        return ix.contains(ic);
    }

    public void removeConsumer(ImageConsumer  ic)
    {
        ix.remove(ic);
    }

    public void startProduction(ImageConsumer  ic)
    {
        addConsumer(ic);
        Enumeration scan = ix.elements();
        while(scan.hasMoreElements())
        {
            requestTopDownLeftRightResend(
            (ImageConsumer) scan.nextElement()
                );
        }
    }

    public void requestTopDownLeftRightResend(ImageConsumer  ic)
    {
        ic.setHints(
        ImageConsumer.TOPDOWNLEFTRIGHT |
            ImageConsumer.SINGLEFRAME |
            ImageConsumer.SINGLEPASS |
            ImageConsumer.COMPLETESCANLINES );
        ic.setColorModel(cm);
        ic.setDimensions(width, height);

        for(int y=0; y<height; ++y)
        {
            ic.setPixels(0,y,width,1, cm, data, y*width, width);
        }

        ic.imageComplete( ImageConsumer.STATICIMAGEDONE );
    }
}



public class IconSelection
{
    private static final byte[] copy = {
        31,-117,8,0,0,0,0,0,0,0,-67,-108,-47,13,-61,
        32,12,68,-103,-116,-111,-104,-95,19,116,23,126,24,-125,1,
        24,-128,1,88,-64,-27,-84,16,-95,20,48,53,82,45,-99,
        32,-63,-100,94,28,48,-123,16,-56,57,39,-86,-26,-103,-105,
        49,-110,56,-73,78,69,109,122,-34,126,111,-86,-31,61,121,
        12,-105,-84,-75,-108,82,-30,28,-52,55,60,111,63,124,55,
        -4,-80,-65,-108,2,119,-10,64,52,-49,13,-50,41,-97,-78,
        -82,83,62,101,93,-89,124,-54,-70,-118,124,-19,125,-116,-111,
        114,-50,-68,-74,-88,-85,-102,-81,5,60,71,126,-65,-16,61,
        -1,-55,41,-33,83,-89,124,125,-32,-7,31,124,-93,115,-91,
        -31,91,-35,3,5,31,-97,-63,-26,-37,75,-55,-89,-22,59,
        2,-33,81,95,-100,-36,-29,47,-65,-35,-2,-46,-11,25,-79,
        55,-114,-22,-70,16,-10,124,0,-43,-38,63,119,64,6,0,
        0        };
    public static final int COPY = 0;

    private static final byte[] mailin = {
        31,-117,8,0,0,0,0,0,0,0,-27,-44,49,14,-126,
        48,20,6,-32,119,25,47,-64,1,-104,9,-57,-24,106,-62,
        1,-100,60,1,3,-34,-94,-117,113,99,113,114,114,52,97,
        52,49,-15,4,-114,110,-43,31,120,-49,-10,65,-125,67,19,
        7,73,-2,-48,2,-3,104,75,41,109,-119,-24,-113,-30,-84,
        -75,-50,24,-109,36,108,-67,-23,36,97,23,-27,-32,120,116,
        -110,-25,-3,48,-101,91,87,-9,-71,-100,-41,-18,-44,22,19,
        47,-53,40,112,98,22,59,-66,-123,-74,-38,-37,109,6,19,
        -9,-115,-95,62,49,71,91,104,-85,-67,-93,93,-119,-55,-13,
        -127,-14,55,22,-38,-78,-105,-25,-7,88,-2,4,-11,-94,117,
        98,46,89,-2,-4,-59,-66,21,60,-33,-124,19,-77,-76,87,
        119,78,-38,-49,5,-49,-108,37,-119,-123,49,-64,98,31,-25,
        -96,127,-51,117,18,-79,80,31,61,-98,15,-12,-83,-86,42,
        -23,-13,-60,-117,-116,-105,45,-18,19,-100,125,51,68,-101,75,
        -33,-61,-73,48,54,127,-82,80,-42,-90,94,47,-72,-50,-17,
        -9,-41,11,27,58,-38,-44,94,-86,-1,55,-15,-2,-14,-21,
        -3,114,41,47,-34,-63,-63,34,64,6,0,0        };
    public static final int MAILIN = 1;

    private static final byte[] cut = {
        31,-117,8,0,0,0,0,0,0,0,-107,-108,-35,17,-124,
        32,12,-124,-87,-49,98,44,-64,-89,-85,-124,2,44,-128,103,
        43,-80,0,11,-80,0,26,-32,88,-122,112,-127,75,-8,97,
        38,-93,-122,-27,19,-52,70,-13,49,-58,-60,8,-57,113,80,
        -104,-100,27,5,95,19,-50,-13,12,-41,117,-107,-4,-74,109,
        33,-54,82,76,48,-45,26,-46,-25,53,96,86,115,-9,125,
        -49,48,43,22,-122,-58,115,-50,-107,121,-123,-7,-57,-94,61,
        72,60,107,109,120,-33,87,99,-118,44,-20,65,-29,33,-30,
        55,-107,-104,93,86,-61,-101,98,46,-80,-122,76,-54,47,-80,
        -70,76,-17,125,57,-13,2,75,101,114,95,44,-78,68,38,
        -68,-113,125,-110,55,-10,125,79,-71,28,83,-3,35,-43,21,
        60,-18,55,-42,107,-61,-2,105,-49,-90,-51,-115,-68,66,-25,
        -128,-73,-103,-74,-46,96,-114,116,13,-77,-54,-31,-2,121,-98,
        84,3,92,-51,-81,63,42,38,-41,-76,-21,-7,51,6,116,
        24,-16,8,-29,85,-25,-32,-17,-27,117,-105,-10,-57,89,57,
        87,120,-109,90,-11,123,75,117,-29,-52,-90,38,-35,-6,-10,
        124,-43,50,-107,127,-27,-116,71,71,-38,47,-48,-4,33,3,
        64,6,0,0        };
    public static final int CUT = 2;

    private static final byte[] mailout = {
        31,-117,8,0,0,0,0,0,0,0,-27,-108,61,10,-62,
        48,20,-128,-33,101,-68,64,15,-112,-71,-25,-56,42,-28,0,
        78,-98,-96,67,-67,69,22,-23,-42,-59,-55,-55,81,-24,40,
        8,-98,-64,-47,45,-26,-91,-68,52,125,125,-87,8,1,7,
        11,31,73,11,-17,-21,-5,105,3,123,0,-8,35,-100,-75,
        -42,105,-83,-117,64,46,-81,46,2,121,113,63,-69,-98,67,
        -28,-11,-24,68,-18,67,19,-72,94,-74,-18,-36,-41,11,95,
        85,-63,-52,-109,115,-111,39,117,97,44,-9,29,118,-93,83,
        -21,-111,53,15,119,97,44,-9,-99,-20,38,-66,7,-7,-58,
        -123,-79,82,-67,-72,-42,-67,-117,-7,114,114,46,-34,63,-91,
        84,-72,111,124,-37,-56,39,-49,15,68,87,-22,-29,-82,28,
        -28,-93,30,-93,-117,114,-59,-107,-5,-96,-67,77,-79,126,-65,
        0,-90,89,97,110,-58,-104,-32,33,-92,122,-55,-71,86,-17,
        -79,29,-31,-50,-36,60,40,23,105,30,-44,43,-84,-107,59,
        -71,15,-97,-89,-33,11,-59,-26,-32,78,-18,43,-11,-1,22,
        62,95,126,125,94,126,-30,13,77,107,16,12,64,6,0,
        0        };
    public static final int MAILOUT = 3;

    private static final byte[] filenew = {
        31,-117,8,0,0,0,0,0,0,0,-51,-108,-69,13,-61,
        32,16,-122,111,86,-73,-39,-64,85,102,-56,24,116,52,-116,
        -112,-46,3,32,-41,94,-29,-62,29,15,-97,17,112,38,74,
        17,-92,95,60,-124,63,127,6,12,60,1,32,4,-99,115,
        -72,44,11,103,127,65,105,-9,18,-26,67,122,-74,21,-98,
        19,-102,-52,-62,-9,-125,107,-22,-9,-94,48,-117,23,-79,16,
        79,-90,13,61,-54,-74,109,-52,-95,122,93,87,-115,25,89,
        38,-44,59,48,-113,107,19,-57,-113,-29,40,60,76,-20,1,
        -13,-62,-118,60,60,-37,-119,41,121,3,-26,-7,125,37,-71,
        -64,53,97,-98,-28,101,102,-61,-79,-31,7,93,-65,-101,123,
        51,92,63,-23,83,-89,-57,-45,-10,-73,-105,17,-113,-41,-57,
        -92,-11,50,113,95,41,117,-55,-29,-108,25,-98,-26,54,-21,
        -25,-67,111,-6,73,71,-115,39,-1,-73,95,-8,-47,-67,-112,
        -49,71,-10,27,57,106,60,122,39,90,123,-53,-19,-82,31,
        -15,-14,-7,-110,-114,45,-41,127,-16,-109,-87,93,53,-34,55,
        105,-15,-28,125,63,27,-63,-6,0,16,101,94,-113,64,6,
        0,0        };
    public static final int FILENEW = 4;

    private static final byte[] fileopen = {
        31,-117,8,0,0,0,0,0,0,0,-51,-108,49,14,2,
        33,16,69,-71,-116,119,-15,28,-76,38,28,-64,-54,-118,-46,
        2,111,97,99,71,-74,-79,-78,-78,52,-39,-34,43,120,3,
        100,54,-50,102,-8,44,-72,-127,-104,88,-68,108,2,-61,-29,
        -121,-39,-116,58,40,-91,-2,-100,-32,-67,15,-42,-38,96,-116,
        -55,-96,-11,-72,-33,-28,-118,75,25,90,107,118,-82,-15,78,
        117,-20,122,-36,119,33,-68,-58,4,118,46,101,71,62,119,
        -50,62,58,79,78,-55,-59,-27,-103,75,-80,83,-6,110,-61,
        118,66,58,-97,-29,-79,10,-33,89,-13,-95,-77,-122,-12,57,
        -25,-118,-66,-45,94,125,-123,-22,-92,79,-10,21,107,-79,55,
        -56,-110,-113,115,33,50,103,9,-14,-111,-117,-66,-46,119,61,
        111,86,-99,71,-40,-123,62,-50,-35,2,-6,122,51,-94,-113,
        -6,-37,-109,17,-33,79,-2,127,-76,-41,-126,-42,-87,-113,51,
        -10,18,125,-55,76,-24,69,-52,-97,121,54,116,-16,-117,-39,
        -4,6,-24,-17,-50,-96,64,6,0,0        };
    public static final int FILEOPEN = 5;

    private static final byte[] filesave = {
        31,-117,8,0,0,0,0,0,0,0,-51,-108,65,13,4,
        33,12,69,81,-122,0,4,32,0,1,8,-32,-76,26,16,
        -128,0,4,32,0,1,8,-64,12,51,-97,-92,27,-122,-52,
        -78,25,-104,3,36,47,-19,-95,125,105,19,-96,104,-83,-117,
        16,-94,-126,124,-122,-74,-97,114,-64,24,-101,-94,117,16,-58,
        -104,98,-83,125,60,-101,115,-82,-10,-10,115,-83,-6,-38,57,
        119,-14,-123,16,94,-11,-59,24,-73,-10,-115,-10,37,103,-113,
        -9,-66,-126,94,2,115,-111,107,-28,-101,-27,-105,79,74,57,
        68,41,117,97,-28,67,61,-99,-100,-13,45,-40,-109,115,-2,
        117,-113,-18,31,-7,80,-121,28,125,56,41,-91,-22,65,-124,
        -13,-119,15,-11,-67,-113,92,-120,111,-8,118,-104,15,-111,124,
        116,-33,0,28,45,-1,124,-24,89,-7,75,-69,127,-107,125,
        -50,72,-50,85,-50,-9,119,0,120,96,-107,-102,64,6,0,
        0        };
    public static final int FILESAVE = 6;

    private static final byte[] help = {
        31,-117,8,0,0,0,0,0,0,0,-83,-108,-63,13,-125,
        48,12,69,61,7,-9,50,0,3,48,3,51,112,69,98,
        6,-90,96,-120,-34,122,65,98,-127,78,-63,-87,-125,-32,-26,
        83,28,57,77,90,57,0,-46,-105,72,-14,-3,-30,4,108,
        26,-120,120,-102,38,110,-37,-10,-108,28,-125,52,-117,-36,-5,
        25,-19,76,-49,106,26,98,-66,-33,-104,-97,93,-98,92,12,
        98,-123,41,60,-49,122,61,-14,-27,98,35,-98,-80,-4,-45,
        -15,60,19,-113,-29,-57,87,-41,53,15,3,109,115,88,-13,
        66,-116,-117,-3,-49,-21,120,93,-55,51,48,22,95,81,20,
        -68,44,-108,-51,67,12,-26,-85,-86,10,-58,80,-112,-93,-111,
        7,-127,-123,-11,-85,120,90,56,55,124,-72,-125,35,-25,-3,
        86,89,-106,-101,55,96,-103,120,49,-85,-17,-5,-8,-69,30,
        -28,33,31,-100,17,-1,-51,21,60,93,-117,87,-16,-112,-105,
        124,-121,44,-98,-44,91,42,-26,23,103,103,-91,-22,-51,-9,
        3,-55,81,-5,-19,-3,96,-21,89,-63,29,-23,58,87,123,
        27,-5,21,120,1,83,-17,43,94,-36,-99,-79,-97,-58,-68,
        -104,-93,125,86,69,61,58,-79,-89,69,111,-94,-76,-59,21,
        64,6,0,0        };
    public static final int HELP = 7;

    private static final byte[] icon = {
        31,-117,8,0,0,0,0,0,0,0,-5,-1,127,-112,1,
        6,6,6,56,-90,-106,126,82,-51,-61,-90,-105,84,-3,48,
        -11,-60,-24,69,-73,3,-103,79,-118,126,108,-26,-31,-109,-61,
        -25,94,108,-6,9,-103,-119,79,63,62,-65,16,-93,-121,80,
        56,-112,-85,-105,20,-69,41,73,-105,52,2,0,-99,88,-41,
        -71,-64,3,0,0        };
    public static final int ICON = 8;

    private static final byte[] idea = {
        31,-117,8,0,0,0,0,0,0,0,-75,-108,61,17,-124,
        48,16,-123,-93,3,25,8,64,0,2,16,-128,0,4,80,
        93,-123,0,20,80,92,-123,0,4,32,0,25,8,-64,64,
        -18,-66,29,-106,9,-103,-124,80,64,-15,-122,76,-10,-19,99,
        -1,-78,-26,99,-116,-15,96,-89,105,18,-116,-29,104,-69,-82,
        -77,77,-45,8,56,115,-73,-37,125,-65,16,-124,-117,95,89,
        -106,54,-49,115,-5,-65,-106,-81,123,-58,6,39,-95,41,90,
        85,85,-119,95,93,-41,71,60,-13,60,11,52,94,108,112,
        -32,70,52,79,90,125,-33,-37,101,89,4,-37,-74,-99,-96,
        -9,112,34,-102,39,45,-2,-17,-22,-84,-21,122,-28,58,12,
        -33,-109,46,92,79,-13,-88,-105,27,-105,27,15,118,108,-22,
        -25,-57,-86,113,-18,-11,20,80,95,-72,-95,-4,-120,15,123,
        -106,101,-62,-11,-19,-44,-107,122,-62,-47,-103,32,31,-12,125,
        -18,29,104,-34,104,104,-65,-120,-105,115,-120,-113,-67,40,10,
        1,-71,-123,56,-8,106,-50,-52,41,-38,-60,29,-5,-65,-42,
        -81,109,-37,32,7,95,52,116,-18,-97,-44,75,-27,123,71,
        -49,-51,55,-43,-113,-108,-98,-33,15,-99,23,122,30,123,15,
        87,122,-2,-68,-92,-26,-7,74,47,48,-49,-105,-17,-115,123,
        52,-104,101,-64,-52,-24,76,71,-34,91,116,31,-60,-6,-83,
        57,94,-20,-125,55,-10,-43,27,-5,-12,-119,125,-1,3,117,
        -41,49,69,64,6,0,0        };
    public static final int IDEA = 9;

    private static final byte[] paste = {
        31,-117,8,0,0,0,0,0,0,0,-19,-108,-63,17,-125,
        32,16,69,-87,-116,2,82,6,5,112,-55,-115,83,42,-56,
        49,125,112,97,38,77,80,-128,5,80,0,13,24,63,3,
        100,65,8,42,-41,48,-13,70,-59,-27,-7,5,-123,61,24,
        99,-111,-43,24,83,-80,117,55,-87,-22,24,113,20,46,33,
        68,6,-29,82,75,125,-53,-78,4,112,-113,-42,86,-50,-20,
        -94,25,-100,115,-69,-68,-67,-20,-107,-77,-16,-67,21,-53,-39,
        -48,-81,-108,106,66,107,71,-66,-105,104,-49,27,-27,126,-5,
        -42,29,-15,1,-116,-7,-59,21,-33,40,39,-112,82,-98,-14,
        61,49,-103,90,-81,26,-121,8,-25,60,-84,53,92,56,39,
        -50,-95,15,-9,-31,-77,-42,-122,117,-9,-34,7,7,90,114,
        -58,-9,-98,-54,-105,26,-7,38,47,-25,67,38,-54,108,-66,
        -102,-39,124,-76,-31,-6,-97,111,-17,75,-1,-45,76,-66,22,
        39,-13,53,-9,83,-70,-81,30,-123,-8,-102,-5,125,-17,25,
        61,-74,-6,15,99,97,-21,-125,64,6,0,0        };
    public static final int PASTE = 10;

    private static final byte[] lock = {
        31,-117,8,0,0,0,0,0,0,0,-67,-109,-51,17,-124,
        32,20,-125,-87,-52,2,40,-64,2,44,-61,-45,-98,44,-61,
        2,44,-61,2,40,-64,2,104,-125,37,-49,-115,-61,34,-65,
        30,100,38,35,10,-7,8,-16,84,31,-91,-44,11,114,-37,
        -74,-71,101,89,68,-45,52,-119,-8,-18,-57,-70,88,100,-8,
        -41,-92,126,-20,102,86,-24,91,-41,85,-78,66,-24,-121,-21,
        84,-104,-30,-63,-68,97,24,-60,-117,102,-83,117,-58,-104,63,
        97,12,115,-44,-23,-55,-14,-72,54,-98,104,-12,-114,-29,40,
        66,-97,-52,96,110,-106,7,15,-42,69,78,-28,-102,-25,-7,
        -30,-45,-113,111,97,70,-17,-55,-14,-72,-41,-29,56,-60,67,
        22,-49,-113,76,-116,-17,-5,-50,61,23,-17,33,-63,-69,-99,
        7,88,1,47,-66,-105,106,125,-44,20,-43,-113,-45,90,-13,
        -82,-82,-70,40,-119,117,77,-87,-109,113,-29,-59,13,-5,-114,
        21,-41,14,-49,37,-59,107,-55,-10,52,95,107,-74,82,-66,
        -34,92,45,-7,82,-71,106,-22,-51,-105,-53,-11,86,62,-84,
        65,-26,19,-63,-101,-5,71,-98,40,96,125,1,-74,29,-27,
        -72,64,6,0,0        };
    public static final int LOCK = 11;

    private static final byte[] print = {
        31,-117,8,0,0,0,0,0,0,0,-99,-108,77,10,-62,
        48,16,70,115,-90,-98,66,60,70,-74,66,15,-32,-54,19,
        116,-95,-73,-88,11,-23,-90,-40,109,69,-60,77,65,112,41,
        8,46,122,6,119,99,-65,-40,-119,-51,52,-3,-119,-123,71,
        -76,78,-97,95,50,105,-44,70,41,-27,-127,-14,60,39,-83,
        53,53,95,39,-119,-94,8,-11,62,-113,-29,67,109,-102,-90,
        68,-105,-116,-86,-86,-94,-70,-82,13,-14,66,29,-2,123,-64,
        -23,100,75,-16,64,-29,-61,56,4,-22,-30,56,-10,-7,-116,
        107,44,-101,-52,55,50,95,-101,-53,-82,-37,-29,97,124,24,
        37,-35,108,-83,-81,-21,-20,-83,63,103,43,-53,-46,34,115,
        -94,110,-71,-4,-11,-91,-103,115,-49,101,-99,69,65,-76,79,
        -52,104,-111,57,91,-33,110,-3,69,121,92,-17,87,102,106,
        -26,114,58,46,-52,58,-98,83,-27,-28,97,23,126,15,-127,
        93,-121,-83,-21,-5,-9,-126,11,57,-92,15,-9,-26,-14,-68,
        39,6,118,-31,-13,-112,-17,118,93,-11,-32,-25,-127,-42,-54,
        -64,62,-66,-17,-13,77,-71,24,-12,-78,-21,-125,75,-6,124,
        -82,41,47,-9,1,125,-31,-3,-62,62,-34,67,-95,112,-97,
        -7,61,-23,-18,-105,-112,125,-126,108,-20,19,-17,-100,-29,68,
        -35,28,60,-82,-65,-50,-50,-103,103,-87,115,-74,-124,48,114,
        46,-37,-7,7,32,29,31,14,58,-21,-23,64,6,0,0        };
    public static final int PRINT = 12;

    private static final byte[] stop = {
        31,-117,8,0,0,0,0,0,0,0,-83,-108,49,18,-126,
        48,16,69,-9,50,-34,-59,73,-27,25,104,45,-19,-84,60,
        -127,5,5,-121,-80,-93,-109,11,120,2,74,42,15,-62,-102,
        -65,100,33,-112,24,2,-102,-103,63,-18,4,-10,-7,18,8,
        116,35,-94,68,-72,40,10,54,-58,72,108,-99,-70,119,45,
        -62,-80,-27,44,118,110,23,-85,44,75,-23,63,-99,-120,-7,
        113,-112,-96,-90,-31,-38,110,55,126,30,25,-93,-17,-119,-101,
        102,-105,-29,-24,86,85,-60,-61,104,-71,-21,72,-126,-71,-115,
        -114,-127,27,-42,-119,-128,-73,-47,113,-26,-26,-5,-60,-26,50,
        28,3,-73,37,111,-61,62,6,110,24,93,57,-15,80,-125,
        -105,-23,24,-72,-31,57,-96,86,30,106,-16,50,28,-93,110,
        -62,123,-99,39,-98,-83,-107,-73,-30,24,117,67,31,-73,-9,
        -119,103,107,-27,37,28,-65,-72,-43,99,-97,-66,47,62,43,
        -31,24,113,-85,3,15,100,-55,-117,56,-50,-49,-126,-35,31,
        -27,41,51,-10,-66,36,28,39,55,-80,-34,-11,-16,12,36,
        -11,-72,86,-27,-59,-42,-68,112,-108,-33,-117,113,107,117,76,
        61,-85,122,-66,116,-1,80,-5,-41,52,-24,5,-61,-1,-33,
        -26,-22,-104,-54,-51,-119,-69,31,-67,-70,14,124,127,-107,-5,
        107,-36,-9,91,-104,127,8,88,31,-119,116,-55,77,64,6,
        0,0        };
    public static final int STOP = 13;

    private static final byte[] unlock = {
        31,-117,8,0,0,0,0,0,0,0,-67,-109,81,21,-123,
        32,16,68,73,102,0,3,24,-64,0,6,-16,-21,125,25,
        -64,0,6,48,-122,1,12,96,0,107,-16,-104,-43,121,7,
        -112,21,-12,-29,113,-50,28,65,-103,-69,-29,-118,-26,99,-116,
        73,-56,-50,-13,108,-121,97,16,-75,109,43,-30,-38,61,75,
        121,52,-3,24,110,-103,-44,-55,46,102,-7,-66,105,-102,36,
        43,-124,-71,95,39,-61,20,15,-10,85,85,37,94,-116,125,
        -33,-19,-70,-82,-127,-16,12,123,-52,-31,81,121,-84,-115,43,
        6,-67,77,-45,-120,48,39,-77,-21,58,-18,85,121,-16,-96,
        46,114,34,-105,-49,-25,-68,-17,-5,32,-93,-13,-88,60,-66,
        43,60,-20,35,56,-20,31,-103,-37,-74,-55,-6,124,103,-107,
        55,-114,99,-16,29,-79,-33,-35,-69,-12,99,89,22,17,123,
        -24,-78,62,57,63,23,30,-13,-110,23,125,-25,-20,121,-53,
        41,58,-113,-74,-82,-21,-96,46,122,125,39,-2,39,-108,57,
        24,23,94,60,-48,-9,88,-15,89,-124,52,94,73,-74,-73,
        -7,74,-77,-35,-27,123,-102,-85,36,95,42,87,78,79,-13,
        105,-71,-2,-107,15,53,-56,124,35,120,-75,127,-28,-115,60,
        -42,23,-97,54,47,111,64,6,0,0        };
    public static final int UNLOCK = 14;

    private static final byte[] key = {
        31,-117,8,0,0,0,0,0,0,0,-99,-108,-63,21,-124,
        32,12,68,83,-103,5,120,-78,6,91,-80,-127,-83,-64,-125,
        7,-113,-10,-80,71,-5,-40,126,-78,14,56,-104,21,87,-120,
        -121,60,30,-127,-4,76,8,32,47,17,-39,77,-105,101,-47,
        -66,-17,51,-37,-4,98,-10,-43,88,-120,107,-102,70,-73,105,
        102,-16,111,-21,46,86,-37,-74,33,118,93,69,85,15,-61,
        -68,-21,34,-73,-126,25,106,-92,46,-78,-26,57,50,48,-110,
        91,-55,12,-38,44,-117,53,-46,127,48,-57,-64,68,-18,-101,
        -13,76,113,-44,37,81,115,-74,6,30,114,22,52,-2,-60,
        32,-65,-39,-101,-50,20,44,-43,-113,-101,71,125,121,127,-44,
        -51,-77,-67,-32,25,90,-106,-22,59,-11,-28,-122,-103,-6,-117,
        -67,-10,-98,-60,26,15,22,-17,13,-4,37,38,53,114,63,
        -49,-117,-84,-40,-29,-40,-113,97,-16,51,17,71,-29,-4,41,
        -13,-33,-101,123,-54,-68,-6,19,-104,3,-15,15,-104,55,119,
        106,44,49,-85,120,-45,52,37,-26,-71,118,-116,96,-18,-9,
        -84,-6,15,58,51,-83,78,-2,31,14,94,-79,118,71,-67,
        -103,78,91,-73,121,51,94,-42,37,-13,-60,-6,2,-53,49,
        -65,3,64,6,0,0        };
    public static final int KEY = 15;

    private static final byte[] tick = {
        31,-117,8,0,0,0,0,0,0,0,-35,-44,-67,17,-128,
        32,12,6,-48,44,-29,0,-70,-123,84,118,-10,-84,-32,2,
        86,-116,-32,46,-18,-30,46,17,-30,15,114,65,16,-80,-47,
        34,-89,-25,125,-66,11,92,0,70,0,-8,105,-95,-108,18,
        -11,43,10,33,-118,45,109,-112,5,83,93,106,90,107,105,
        17,102,-3,28,-86,92,-109,91,-90,63,83,-101,73,25,-91,
        -44,-103,-45,123,-110,107,-47,126,94,-83,10,-5,-69,-66,-93,
        -42,-2,-113,-51,-51,123,-103,-68,107,62,-75,40,75,57,-13,
        -3,-56,-72,102,-118,-27,-52,-112,-49,108,58,-96,122,104,-15,
        -11,-8,-6,76,-77,-30,102,-70,21,54,-13,-84,-80,-103,63,
        -1,-36,44,-77,-72,-7,-50,-3,113,-50,82,-32,-4,125,-79,
        86,74,-58,101,-117,64,6,0,0        };
    public static final int TICK = 16;

    private static final byte[] cross = {
        31,-117,8,0,0,0,0,0,0,0,-75,-44,-71,13,-128,
        48,12,5,80,-81,-60,24,100,-116,-76,44,-63,6,116,76,
        -57,46,-127,32,57,-28,-16,-119,-96,112,1,124,61,41,-79,
        13,-84,0,-16,83,37,120,74,-51,-122,16,-92,108,-79,-46,
        -78,105,102,-79,-104,108,99,29,48,75,102,99,49,-39,-26,
        59,22,-107,-21,45,-84,29,-90,-63,-53,-107,-33,83,102,-116,
        -15,46,-63,98,-49,-52,-103,14,-53,100,58,45,-43,124,97,
        21,19,-17,-118,50,-47,-70,50,-26,-71,-26,-18,-66,-21,-111,
        107,71,40,75,-104,37,-105,-107,-49,40,-12,-35,109,73,125,
        39,76,-43,-86,-25,-39,96,-34,-49,-122,-103,40,-5,70,-11,
        -67,-9,-22,-100,48,95,-125,105,-39,55,-91,119,-115,105,-23,
        -119,50,7,-106,-1,-23,87,117,2,-123,-13,-106,20,64,6,
        0,0        };
    public static final int CROSS = 17;

    private static final byte[] user = {
        31,-117,8,0,0,0,0,0,0,0,-75,-108,-67,17,-62,
        48,12,-123,-75,12,11,48,64,106,38,-56,0,30,-125,-118,
        9,40,-96,-49,0,110,-24,114,52,84,-84,-112,42,13,43,
        112,89,64,-28,-39,-89,-96,-104,24,34,-33,-111,-69,119,78,
        100,-7,-53,-13,-113,76,7,34,-54,-120,-67,-9,-20,-100,-29,
        -86,-86,120,12,-123,22,-33,99,60,55,-26,43,75,56,-50,
        17,-97,-9,-79,21,-82,-127,-55,109,-37,6,31,24,123,57,
        17,-13,-77,-29,71,119,12,2,55,-2,-61,33,111,53,47,
        -50,45,-78,-16,-128,117,-65,-18,-8,-26,55,33,-114,126,11,
        15,30,-32,69,124,105,-98,120,44,-15,39,28,97,97,-2,
        70,127,-127,41,-21,7,47,-32,8,75,-83,-97,105,127,-101,
        -90,-103,-104,-23,-2,34,62,-10,-101,124,105,-23,-13,-105,-10,
        -3,-16,57,-15,-122,97,-8,80,-33,-9,51,89,120,-56,-57,
        -103,94,98,33,94,-62,-85,-21,122,-47,23,-30,37,-68,-19,
        -106,-78,42,-27,-55,25,-47,42,-31,-119,-124,-89,-39,-106,-3,
        -107,-69,64,-33,7,75,60,-55,89,91,115,41,47,125,-73,
        -42,-57,-65,120,-88,-79,119,-99,-51,106,-82,-120,-105,83,-122,
        -9,2,34,36,125,50,64,6,0,0        };
    public static final int USER = 18;


    private static final int MAX = 19;

    private static Image[] icons = new Image[MAX];

    public static Image getIcon(int num)
    {
        if(null != icons[num])
        {
            return icons[num];
        }
        int width=20, height=20;
        byte[] image = stop;
        switch (num)
        {
        case COPY: 
            image = copy; 
            break;
        case CUT: 
            image = cut; 
            break;
        case FILENEW: 
            image = filenew; 
            break;
        case FILEOPEN: 
            image = fileopen; 
            break;
        case FILESAVE: 
            image = filesave; 
            break;
        case HELP: 
            image = help; 
            break;
        case ICON: 
            image = icon; 
            width=16; 
            height=15; 
            break;
        case IDEA: 
            image = idea; 
            break;
        case PASTE: 
            image = paste; 
            break;
        case PRINT: 
            image = print; 
            break;
        case MAILIN: 
            image = mailin; 
            break;
        case MAILOUT: 
            image = mailout; 
            break;
        case LOCK: 
            image = lock; 
            break;
        case UNLOCK: 
            image = unlock; 
            break;
        case KEY: 
            image = key; 
            break;
        case TICK: 
            image = tick; 
            break;
        case CROSS: 
            image = cross; 
            break;
        case USER: 
            image = user; 
            break;
        }
        ByteArrayInputStream in = new ByteArrayInputStream(image);
        GZIPInputStream inf = null;
        DataInputStream get = null;
        int [] pix = new int[width*height];

        try{
            inf = new GZIPInputStream(in);
            get = new DataInputStream(inf);
            try{
                for(int i=0; i<pix.length; ++i) pix[i] = get.readInt();
            } 
            catch(EOFException eof) {
                return null;
            }
        } 
        catch(IOException io) {
            return null;
        }
        Iconette l = new Iconette(pix, width, height);
        icons[num] = Toolkit.getDefaultToolkit().createImage(l);
        return icons[num];
    }
}

/* end of file IconImage.java */

