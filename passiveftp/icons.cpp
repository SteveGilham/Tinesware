/* icons.cpp : Defines the icons for the application.
   Copyright 2002 Mr. Tines <Tines@RavnaAndTines.com>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU Library General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Library General Public License for more details.

You should have received a copy of the GNU Library General Public License
along with this program; if not, write to the Free Software
Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#include <map>
#include <algorithm>
#include "icons.h"

#ifdef _MSC_VER
#pragma warning (disable : 4244)
#endif
#include <fx.h>
#include <FXICOIcon.h>
#ifdef _MSC_VER
#pragma warning (default : 4244)
#endif

#include "ftpicon.h"
#include "tines.h"
const unsigned char folder[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x10,0x00,0x10,0x00,0xf2,0x00,0x00,0xb2,0xc0,0xdc,
  0x80,0x80,0x80,0xc0,0xc0,0xc0,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,
  0x00,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x00,0x03,
  0x3b,0x08,0xba,0xdc,0x1b,0x10,0x3a,0x16,0xc4,0xb0,0x22,0x4c,0x50,0xaf,0xcf,0x91,
  0xc4,0x15,0x64,0x69,0x92,0x01,0x31,0x7e,0xac,0x95,0x8e,0x58,0x7b,0xbd,0x41,0x21,
  0xc7,0x74,0x11,0xef,0xb3,0x5a,0xdf,0x9e,0x1c,0x6f,0x97,0x03,0xba,0x7c,0xa1,0x64,
  0x48,0x05,0x20,0x38,0x9f,0x50,0xe8,0x66,0x4a,0x75,0x24,0x00,0x00,0x3b
  };
const unsigned char document[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x10,0x00,0x10,0x00,0xf2,0x00,0x00,0xbf,0xbf,0xbf,
  0x80,0x80,0x80,0xff,0xff,0xff,0xc0,0xc0,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x00,0x03,
  0x36,0x08,0x10,0xdc,0xae,0x70,0x89,0x49,0xe7,0x08,0x51,0x56,0x3a,0x04,0x86,0xc1,
  0x46,0x11,0x24,0x01,0x8a,0xd5,0x60,0x2a,0x21,0x6a,0xad,0x9a,0xab,0x9e,0xae,0x30,
  0xb3,0xb5,0x0d,0xb7,0xf2,0x9e,0xdf,0x31,0x14,0x90,0x27,0xf4,0xd5,0x86,0x83,0xa4,
  0x72,0x09,0x2c,0x39,0x9f,0xa6,0x04,0x00,0x3b
  };
/*const unsigned char newfolder[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x10,0x00,0x10,0x00,0xf1,0x00,0x00,0xb2,0xc0,0xdc,
  0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0x2c,0x00,0x00,0x00,0x00,0x10,0x00,
  0x10,0x00,0x00,0x02,0x30,0x84,0x8f,0xa9,0x19,0xeb,0xbf,0x1a,0x04,0xf2,0x54,0x1a,
  0xb2,0x69,0x1c,0x05,0x31,0x80,0x52,0x67,0x65,0xe6,0xb9,0x51,0x54,0xc8,0x82,0xe2,
  0xf5,0xb5,0x2d,0xb9,0xba,0xf2,0xb8,0xd9,0xfa,0x55,0xcb,0x22,0xa3,0x9b,0x31,0x4e,
  0x44,0xde,0x24,0x51,0x00,0x00,0x3b
  };*/
/* Generated by reswrap from file newfolder.gif */
const unsigned char newfolder[]={
  0x47,0x49,0x46,0x38,0x39,0x61,0x14,0x00,0x14,0x00,0xf7,0x00,0x00,0x00,0x00,0x00,
  0x6e,0x6e,0x6e,0xaf,0x92,0x00,0xdc,0x92,0x00,0xff,0xaa,0x00,0xdc,0xdc,0x00,0xff,
  0xff,0x00,0xc3,0xb8,0x48,0xd1,0xc9,0x6b,0xff,0xc6,0x6b,0x86,0x86,0x86,0xb6,0xb6,
  0xb6,0xff,0xf0,0xd4,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x21,0xf9,0x04,
  0x01,0x00,0x00,0xff,0x00,0x21,0xfe,0x1c,0x55,0x6c,0x65,0x61,0x64,0x20,0x47,0x49,
  0x46,0x20,0x53,0x6d,0x61,0x72,0x74,0x53,0x61,0x76,0x65,0x72,0x20,0x56,0x65,0x72,
  0x20,0x32,0x2e,0x30,0x00,0x2c,0x00,0x00,0x00,0x00,0x14,0x00,0x14,0x00,0x00,0x08,
  0xb2,0x00,0xff,0x09,0x1c,0x48,0x90,0xe0,0x80,0x04,0x03,0x0a,0x2a,0x2c,0x78,0xd0,
  0x00,0xc2,0x81,0x0b,0x14,0x04,0x98,0x38,0x51,0xc1,0x02,0x81,0x03,0x08,0x14,0x30,
  0x50,0x80,0x40,0xc2,0x88,0x01,0x00,0x88,0x14,0x19,0xc0,0x62,0xc6,0x02,0x05,0x1a,
  0xa0,0xf4,0xb8,0x20,0x24,0x02,0x06,0x30,0x19,0x00,0x08,0xd0,0xd0,0x40,0x83,0x06,
  0x06,0x72,0x26,0x68,0x09,0x80,0xc1,0x81,0x9f,0x07,0x04,0x88,0x3c,0xb9,0x71,0xe5,
  0x00,0x9e,0x3e,0x81,0xfe,0x84,0x79,0x92,0xa3,0xc7,0x00,0x48,0x63,0xc2,0x44,0x40,
  0x15,0x41,0x43,0x84,0x33,0x91,0x56,0xdd,0x5a,0x95,0x80,0x01,0x02,0x42,0xa1,0x86,
  0x64,0xc0,0x95,0xab,0x57,0xb0,0x59,0xc7,0x96,0xdd,0x7a,0x36,0xac,0xd6,0xb5,0x54,
  0x0f,0x0e,0x70,0xab,0x16,0x6e,0x5c,0x04,0x74,0x7b,0xda,0xdd,0x9a,0x97,0xec,0x5e,
  0xaa,0x79,0x05,0x08,0x1e,0x4c,0xb8,0x70,0xda,0x91,0x88,0x13,0x27,0x0e,0xf0,0xaf,
  0x25,0xc5,0xc7,0x90,0x1f,0x5f,0x6c,0xbc,0xa0,0xb2,0xe5,0xcb,0x98,0x27,0x2f,0xdc,
  0x4c,0x30,0x20,0x00,0x3b
  };

const unsigned char dlgnewfolder[]={
  0x47,0x49,0x46,0x38,0x37,0x61,0x20,0x00,0x20,0x00,0xf2,0x00,0x00,0xb2,0xc0,0xdc,
  0x80,0x80,0x80,0xff,0xff,0xff,0xff,0xff,0x00,0xc0,0xc0,0xc0,0x00,0x00,0x00,0x80,
  0x80,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x20,0x00,0x20,0x00,0x00,0x03,
  0x83,0x08,0xba,0xdc,0xfe,0x30,0xca,0x49,0x6b,0x0c,0x38,0x67,0x0b,0x83,0xf8,0x20,
  0x18,0x70,0x8d,0x37,0x10,0x67,0x8a,0x12,0x23,0x09,0x98,0xab,0xaa,0xb6,0x56,0x40,
  0xdc,0x78,0xae,0x6b,0x3c,0x5f,0xbc,0xa1,0xa0,0x70,0x38,0x2c,0x14,0x60,0xb2,0x98,
  0x32,0x99,0x34,0x1c,0x05,0xcb,0x28,0x53,0xea,0x44,0x4a,0xaf,0xd3,0x2a,0x74,0xca,
  0xc5,0x6a,0xbb,0xe0,0xa8,0x16,0x4b,0x66,0x7e,0xcb,0xe8,0xd3,0x38,0xcc,0x46,0x9d,
  0xdb,0xe1,0x75,0xba,0xfc,0x9e,0x77,0xe5,0x70,0xef,0x33,0x1f,0x7f,0xda,0xe9,0x7b,
  0x7f,0x77,0x7e,0x7c,0x7a,0x56,0x85,0x4d,0x84,0x82,0x54,0x81,0x88,0x62,0x47,0x06,
  0x91,0x92,0x93,0x94,0x95,0x96,0x91,0x3f,0x46,0x9a,0x9b,0x9c,0x9d,0x9e,0x9a,0x2e,
  0xa1,0xa2,0x13,0x09,0x00,0x3b
  };
const unsigned char deletefile[]={
  0x42,0x4d,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x28,0x00,
  0x00,0x00,0x10,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,
  0x00,0x00,0x40,0x00,0x00,0x00,0x6d,0x0b,0x00,0x00,0x6d,0x0b,0x00,0x00,0x02,0x00,
  0x00,0x00,0x02,0x00,0x00,0x00,0xdc,0xc0,0xb2,0x00,0x00,0x00,0x84,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x04,0x00,0x00,0x70,0x00,0x00,0x00,0x78,0x08,
  0x00,0x00,0x38,0x10,0x00,0x00,0x1c,0x30,0x00,0x00,0x0e,0x60,0x00,0x00,0x07,0xc0,
  0x00,0x00,0x03,0x80,0x00,0x00,0x07,0xc0,0x00,0x00,0x0e,0x60,0x00,0x00,0x3c,0x30,
  0x00,0x00,0x78,0x18,0x00,0x00,0x70,0x04,0x00,0x00,0x00,0x00,0x00,0x00
  };


    class IconsImpl : public Icons {
    public:
        IconsImpl(FXApp * app) :
          Icons(), theApp(app)
          {
          }
        FXIcon * get(Icons::ID id);
        ~IconsImpl();
    private:
        FXApp* theApp;
        std::map<Icons::ID, FXIcon *> lazy;
        static FXColor background;
    };

    //=========================================================

    FXColor IconsImpl::background = FXRGB(128,0,0);

    //=========================================================

    class IconMapDeleter
    {
    public:
        IconMapDeleter();
        void operator ( ) (std::pair<Icons::ID, FXIcon *> p);
    };

    IconMapDeleter::IconMapDeleter()
    {}
    void IconMapDeleter::operator ( ) (std::pair<Icons::ID, FXIcon *> p)
    {
        delete(p.second);
    }

    //=========================================================

    FXIcon * IconsImpl::get(Icons::ID id)
    {
        FXIcon * value = lazy[id];
        if(value != NULL)
            return value;

        switch(id)
        {
        case FRAME_ICON:
            value = new FXICOIcon(theApp, ftp);
            break;
        case TINES:
            value = new FXBMPIcon(theApp, tines);
            break;
        case FOLDER:
            value = new FXGIFIcon(theApp,folder);
            break;
        case DOCUMENT:
            value = new FXGIFIcon(theApp,document);
            break;
        case NEWFOLDER:
            value = new FXGIFIcon(theApp,newfolder);
            break;
        case DLGNEWFOLDER:
            value = new FXGIFIcon(theApp,dlgnewfolder);
            break;
        case DELETEFILE:
            value = new FXBMPIcon(theApp,deletefile,0,IMAGE_ALPHAGUESS);
            break;
        default:
            value = (FXIcon*)0;
        }
        value->create();
        return (lazy[id] = value);
    }

    IconsImpl::~IconsImpl()
    {
        std::for_each(lazy.begin(), lazy.end(), IconMapDeleter());
    }

    Icons::Icons(FXApp * app) :
        impl(new IconsImpl(app))
    {
    }

    Icons::Icons() :
        impl(NULL)
    {
    }

    FXIcon * Icons::get(Icons::ID id)
    {
        return impl->get(id);
    }

    FXIcon * Icons::operator[](Icons::ID id)
    {
        return impl->get(id);
    }

    Icons::~Icons()
    {
        delete impl;
    }

